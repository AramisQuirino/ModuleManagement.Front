@page "/config/company"
@using ModuleManagement.Web.Client.Models
@using ModuleManagement.Web.Client.Services
@inject IConfigurationService ConfigService
@inject NavigationManager NavigationManager

<h3 class="text-2xl font-bold mb-4">Configuración de Empresa</h3>

@if (company == null)
{
    <p>Cargando datos de la empresa...</p>
}
else
{
    <EditForm Model="company" OnValidSubmit="SaveCompany">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label class="block font-semibold">Nombre:</label>
            <InputText @bind-Value="company.Name" class="border p-2 rounded w-full" />
        </div>
        <div class="mb-3">
            <label class="block font-semibold">Descripción:</label>
            <InputText @bind-Value="company.Description" class="border p-2 rounded w-full" />
        </div>
        <div class="mb-3">
            <label class="block font-semibold">Logo URL:</label>
            <InputText @bind-Value="company.Logo" class="border p-2 rounded w-full" />
        </div>
        <div class="mb-3">
            <label class="block font-semibold">Website URL:</label>
            <InputText @bind-Value="company.WebsiteUrl" class="border p-2 rounded w-full" />
        </div>
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
            Guardar Empresa
        </button>
    </EditForm>
}

@code {
    private Company company = new Company();

    protected override async Task OnInitializedAsync()
    {
        int idCompany = 1; // Ajusta el id de la empresa según tu contexto
        company = await ConfigService.GetCompanyAsync(idCompany);
    }

    private async Task SaveCompany()
    {
        await ConfigService.UpdateCompanyAsync(company);
        NavigationManager.NavigateTo("/");
    }
}
